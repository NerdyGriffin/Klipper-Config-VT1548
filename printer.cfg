[include mainsail.cfg]
[include moonraker_obico_macros.cfg]
[include timelapse.cfg]
# This file contains common pin mappings for the BigTreeTech Octopus V1.
# To use this config, the firmware should be compiled for the STM32F446 with a "32KiB bootloader"
# Enable "extra low-level configuration options" and select the "12MHz crystal" as clock reference

# after running "make", copy the generated "klipper/out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the OctoPus with that SD card.

# See docs/Config_Reference.md for a description of parameters.

## Voron Design Trident 250/300/350mm BigTreeTech OctoPus V1 TMC2209 UART config

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths                            [mcu] section
## Thermistor types                     [extruder] and [heater_bed] sections - See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types
## Leadscrew Rotation Distance          [stepper_z], [stepper_z1], [stepper_z2]
## Z Endstop Switch location            [safe_z_home] section
## Z Endstop Switch  offset for Z0      [stepper_z] section
## PID tune                             [extruder] and [heater_bed] sections
## Probe pin                            [probe] section
## Fine tune E steps                    [extruder] section

[mcu]
##  Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_4D0043001551303432323631-if00
restart_method: command
##--------------------------------------------------------------------

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[printer]
kinematics: corexy
max_velocity: 500
max_accel: 15000            #Max 4000 # Input shaper recommended max x: 6900 max y: 4900
max_z_velocity: 30          #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
# square_corner_velocity: 5.0

#####################################################################
#   X/Y Stepper Settings
#####################################################################

##  B Stepper - Left
##  Connected to MOTOR_0
##  Endstop connected to DIAG_0
[stepper_x]
step_pin: PF13
dir_pin: PF12
enable_pin: !PF14
rotation_distance: 40
microsteps: 32
full_steps_per_rotation: 400  #set to 200 for 1.8 degree stepper
endstop_pin: ^PG6
position_min: 0
##--------------------------------------------------------------------
position_endstop: 300
position_max: 300
##--------------------------------------------------------------------
homing_speed: 200   #Max 100
homing_retract_dist: 5
second_homing_speed: 20
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_x]
uart_pin: PC4
interpolate: False
# Default 0.8 Max 1.4 Rated 2.0
run_current: 1.0
sense_resistor: 0.110
stealthchop_threshold: 0

##  A Stepper - Right
##  Connected to MOTOR_1
##  Endstop connected to DIAG_1
[stepper_y]
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
rotation_distance: 40
microsteps: 32
full_steps_per_rotation: 400  #set to 200 for 1.8 degree stepper
endstop_pin: PG9
position_min: 0
##--------------------------------------------------------------------
position_endstop: 305
position_max: 306
##--------------------------------------------------------------------
homing_speed: 200  #Max 100
homing_retract_dist: 5
second_homing_speed: 20
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_y]
uart_pin: PD11
interpolate: False
# Default 0.8 Max 1.4 Rated 2.0
run_current: 1.0
sense_resistor: 0.110
stealthchop_threshold: 0

#####################################################################
#   Z Stepper Settings
#####################################################################

##  Z0 Stepper - Front Left
##  Connected to MOTOR_2
##  Endstop connected to DIAG_2
[stepper_z]
step_pin: PF11
dir_pin: !PG3
enable_pin: !PG5
rotation_distance: 4    # Rotation Distance for TR8x8 = 8, TR8x4 = 4, TR8x2 = 2
microsteps: 32
full_steps_per_rotation: 200
endstop_pin: probe:z_virtual_endstop
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##  Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
# position_endstop: -0.5 # COMMENTED OUT FOR TAP PROBE
position_max: 280 ## For LDO 300^3 kits use 280, for 250^3 kits use 230
position_min: -2.5
homing_speed: 10 # Leadscrews are slower than 2.4, 10 is a recommended max.
second_homing_speed: 3
homing_retract_dist: 3

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: PC6
interpolate: False
run_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z1 Stepper - Rear Center
##  Connected to MOTOR_3
[stepper_z1]
step_pin: PG4
dir_pin: !PC1
enable_pin: !PA0
rotation_distance: 4  # Rotation Distance for TR8x8 = 8, TR8x4 = 4, TR8x2 = 2
microsteps: 32
full_steps_per_rotation: 200

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z1]
uart_pin: PC7
interpolate: False
run_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z2 Stepper - Front Right
##  Connected to MOTOR_4
[stepper_z2]
step_pin: PF9
dir_pin: !PF10
enable_pin: !PG2
rotation_distance: 4  # Rotation Distance for TR8x8 = 8, TR8x4 = 4, TR8x2 = 2
microsteps: 32
full_steps_per_rotation: 200

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]
uart_pin: PF2
interpolate: False
run_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 0


#####################################################################
#   Extruder
#####################################################################

#   Connected to MOTOR_6
#   Heater - HE0
#   Thermistor - T0
[extruder]
step_pin: nhk:gpio23                                                # LDO Nitehawk overrides this setting
dir_pin: nhk:gpio24                                                 # LDO Nitehawk overrides this setting
enable_pin: !nhk:gpio25                                             # LDO Nitehawk overrides this setting
##  Update value below when you perform extruder calibration
##  If you ask for 100mm of filament, but in reality it is 98mm:
##  rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
##  22.6789511 is a good starting point
# rotation_distance: 22.4   #Bondtech 5mm Drive Gears
# rotation_distance: 47.088 #Galileo 2 16mm Drive Gear
rotation_distance: 47.088
##  Update Gear Ratio depending on your Extruder Type
##  Use 50:10 for Stealthburner/Clockwork 2
##  Use 50:17 for Afterburner/Clockwork (BMG Gear Ratio)
##  Use 80:20 for M4, M3.1
##  Use 9:1 for Galileo 2
gear_ratio: 9:1
microsteps: 16 # 16 for Galileo 2
full_steps_per_rotation: 200    #200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.75
heater_pin: nhk:gpio9                                               # LDO Nitehawk overrides this setting
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## The kit ships with ATC Semitec 104NT thermistors, check your thermistor type if you have a hotend with an integrated thermistor
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: nhk:gpio29                                              # LDO Nitehawk overrides this setting
min_temp: 10
max_temp: 300
max_power: 1.0
min_extrude_temp: 170
max_extrude_only_distance: 150
max_extrude_cross_section: 5                                        # Required for KAMP
# max_extrude_only_velocity: 50
# Default = ( 16 * printer.toolhead.max_velocity * ( nozzle_diameter^2 ) )
#             /
#           ( pi * ( filament_diameter^2 ) )
#control = pid
#pid_kp = 26.213
#pid_ki = 1.304
#pid_kd = 131.721
##  Try to keep pressure_advance below 1.0
pressure_advance: 0.02 # Tuned 2023
##  Default is 0.040, leave stock
#pressure_advance_smooth_time: 0.040

##  E0 on MOTOR6
##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 extruder]
uart_pin: nhk:gpio0                                                 # LDO Nitehawk overrides this setting
interpolate: false                                                  # LDO Nitehawk overrides this setting
run_current: 0.6 # 0.6 for Galileo 2
sense_resistor: 0.110                                               # LDO Nitehawk overrides this setting
stealthchop_threshold: 0


#####################################################################
#   Bed Heater
#####################################################################

[heater_bed]
##  SSR Pin - HE1
##  Thermistor - TB
heater_pin: PA2
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for Keenovo heaters
## LDO heaters have their sensor type labelled on the heater
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: PF3
##  Adjust max_power so it doesn't exceed the SSR rating. The Omron G3NA-210B-DC5 SSR is rated at 4 amps without a heatsink.
##  The formula is "4 / (Wattage_of_bed_heater / Mains_voltage) = max_power"
##  If max_power is greater than 1.0, use 1.0
##  Adjust Max Power so your heater doesn't warp your bed. Rule of thumb is 0.4 watts / cm^2 .
# max_power: 0.8
min_temp: 0
max_temp: 120
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769

#####################################################################
#   Probe
#####################################################################

[probe]
##  Chaotic Labs CNC Tap
pin: nhk:gpio13                                                     # LDO Nitehawk overrides this setting
x_offset: 0
y_offset: 0
#z_offset: 0
#z_offset 2023-12-29 ABS: -0.195
#z_offset 2024-03-04 ABS: -0.240
#z_offset 2024-03-04 TPU: -0.310
#z_offset 2024-05-31 TPU: -0.330
#z_offset 2024-06-06 Nylon: -0.330
#z_offset 2024-06-19 Nylon: -0.340
#z_offset 2024-08-07 TPU: -0.310
#z_offset 2024-08-29 Nylon: -0.370
#z_offset 2024-08-29 PLA: -0.240
#z_offset 2024-11-13 ABS: -0.310
#z_offset 2024-11-13 TPU: -0.350
#z_offset 2024-12-02 TPU: -0.360
#z_offset 2024-12-20 ABS: -0.330
# speed: 5 # default: 5.0
lift_speed: 20
samples: 3
samples_result: median
#sample_retract_dist: 2 # default: 2.0
samples_tolerance: 0.01
samples_tolerance_retries: 10

activate_gcode:
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M117 { 'Cooling to %.1fC...' % (PROBE_TEMP) }
        M109 S{ PROBE_TEMP }
        M117 Probing...
    {% elif ACTUAL_TEMP > MAX_TEMP %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
        M117 { 'Waiting until temperature is below %.1fC...' % (MAX_TEMP) }
        TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        M117 Probing...
    {% endif %}


#####################################################################
#   Fan Control
#####################################################################

[fan]
##  Print Cooling Fan - Nitehawk PCF (Formerly FAN0)
pin: nhk:gpio6                                                      # LDO Nitehawk overrides this setting
#tachometer_pin: nhk:gpio17
#tachometer_ppr: 2
kick_start_time: 0.5
##  Depending on your fan, you may need to increase this value
##  if your fan will not start. Can change cycle_time (increase)
##  if your fan is not able to slow down effectively
off_below: 0.10

[heater_fan hotend_fan]
##  Hotend Fan - Nitehawk HEF (Formerly FAN1)
pin: nhk:gpio5                                                      # LDO Nitehawk overrides this setting
#tachometer_pin: nhk:gpio16
#tachometer_ppr: 2
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0

# [heater_fan bed_fan]
# ##  Bed Heater Fan - FAN1
# pin: PE5
# shutdown_speed: 0.0
# kick_start_time: 0.5
# heater: heater_bed
# heater_temp: 60
# fan_speed: 0.2

#### TODO: Move elec. bay fans to FAN6, move stepper fan to controller_fan, use FAN1 for bed_fan

[controller_fan stepper_fan]
##  Stepper fan - FAN1
pin: PE5
kick_start_time: 0.5
heater: heater_bed

[controller_fan controller_fan]
##  Controller fan - FAN2
pin: PD12
kick_start_time: 0.5
heater: heater_bed

# FAN3(PD13) was burned out on 2023-10-27 due to incorrect installation of WAGO in Nevermore filter

##  Exhaust fan was moved to FAN0 after FAN3 was burned out
[heater_fan exhaust_fan]
#  Exhaust fan - FAN0 (Formerly FAN3)
pin: PA8
shutdown_speed: 0.0
kick_start_time: 5.0
heater: heater_bed
heater_temp: 60

[heater_fan filter_fan]
##  Nevermore filter fan - FAN4
pin: PD14
shutdown_speed: 0.0
kick_start_time: 5.0
heater: extruder, heater_bed
heater_temp: 40
fan_speed: 0.5

#####################################################################
#   LED Control
#####################################################################

# ## Caselight was moved to FAN7(J56) after FAN3(PD13) was burned out
# [output_pin caselight]
# ## Chamber Lighting - FAN7 (Formerly FAN5)
# pin: PD15
# pwm:true
# shutdown_value: 0
# value:1
# cycle_time: 0.01

[neopixel headlight]
## Stealthburner lighting - RGB_LED
pin: nhk:gpio7                                                       # LDO Nitehawk overrides this setting
chain_count: 3
color_order: GRBW
initial_RED: 0.0
initial_GREEN: 0.0
initial_BLUE: 0.0
initial_WHITE: 0.0

[include led-effects.cfg]

######################################################################
# Beeper
######################################################################

# M300 : Play tone. Beeper support, as commonly found on usual LCD
# displays (i.e. RepRapDiscount 2004 Smart Controller, RepRapDiscount
# 12864 Full Graphic). This defines a custom I/O pin and a custom
# GCODE macro.  Usage:
#   M300 [P<ms>] [S<Hz>]
#   P is the tone duration, S the tone frequency.
# The frequency won't be pitch perfect.

[pwm_cycle_time beeper]
## Beeper - FAN5
pin: PD15
#   Beeper pin. This parameter must be provided.
#   ar37 is the default RAMPS/MKS pin.
value: 0
#   Silent at power on, set to 1 if active low.
shutdown_value: 0
#   Disable at emergency shutdown (no PWM would be available anyway).
cycle_time: 0.001
#   Default PWM frequency : 0.001 = 1ms will give a tone of 1kHz
#   Although not pitch perfect.

[gcode_macro M300]
gcode:
    # Use a default 1.2kHz tone if S is omitted.
    {% set S = params.S|default(1046.50)|int %}
    # Use a 100ms duration is P is omitted.
    {% set P = params.P|default(100)|int %}
    SET_PIN PIN=beeper VALUE=0.5 CYCLE_TIME={ 1.0/S if S > 0 else 1 }
    G4 P{P}
    SET_PIN PIN=beeper VALUE=0

#####################################################################
#   Filament Runout Sensor
#####################################################################

[filament_switch_sensor switch_sensor]
switch_pin: ^PG13
pause_on_runout: False
runout_gcode:
  {% if not printer.pause_resume.is_paused %}
    PAUSE # [pause_resume] is required in printer.cfg
  {% endif %}
  M117 Filament runout (switch)
  M300 P2000
insert_gcode:
  M117 Filament inserted (switch)

[filament_motion_sensor encoder_sensor]
switch_pin: ^PG12
detection_length: 20 ; This can be adjusted to your desired level of sensitivity. 10 is a recommended value to prevent flow dropoff false triggers. BTT default is 2.88. 2024 tune: 18
extruder: extruder
pause_on_runout: False ; This can be set to false to debug false positives putting the sensor in "monitor mode". The printer will not pause but it will run the runout_gcode below.
runout_gcode:
  {% if not printer.pause_resume.is_paused %}
    PAUSE # [pause_resume] is required in printer.cfg
  {% endif %}
  M117 Filament runout (encoder)
insert_gcode:
  M117 Filament inserted (encoder)

#####################################################################
# 	Additional Sensors
#####################################################################

[temperature_sensor stepper_temp]
## Stepper Temperature - T0
sensor_type: Generic 3950
sensor_pin: PF4
min_temp: 0
max_temp: 100
gcode_id: stepper_th

#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[include homing.cfg] # Must be placed before beacon.cfg

[idle_timeout]
# Modified to not disable steppers (M84) on idle
gcode:
    M104 S0 #TURN_OFF_HEATERS
    {% if not (printer.idle_timeout.state|upper == "PRINTING" or printer.pause_resume.is_paused or printer.virtual_sdcard.is_active) %}
        M84
    {% endif %}
timeout: 1800

[z_tilt]
##  Use Z_TILT_ADJUST to level the bed .
##  z_positions: Location of toolhead

##--------------------------------------------------------------------
z_positions:
  -50, 18
  150, 348
  350, 18
points:
  30, 30
  150, 270
  270, 30
##--------------------------------------------------------------------

speed: 300
# horizontal_move_z: 10 # default: 5
retries: 5
retry_tolerance: 0.01

[gcode_macro Z_TILT_ADJUST]
rename_existing: _Z_TILT_ADJUST
# Update the status LEDs before performing the Z_TILT_ADJUST
gcode:
    STATUS_CALIBRATING_Z
    _Z_TILT_ADJUST {rawparams}
    G28 Z

[bed_mesh]
speed: 50 # Slowed down to prevent communication timeout errors
# horizontal_move_z: 10 # default: 5
mesh_min: 30, 30
mesh_max: 270,270
probe_count: 9,9 # Values should be odd, so one point is directly at bed center
fade_start: 1.0
fade_end: 10.0
# fade_target: 0 # Default is the average z value of the mesh.
split_delta_z: 0.0125
algorithm: bicubic
zero_reference_position: 150, 150

# [include beacon.cfg] # Must be placed after homing.cfg

########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<5V>

#####################################################################
#   Displays
#####################################################################

# Not applicable for KlipperScreen
# [display]

#####################################################################
#   LDO Nitehawk
#####################################################################
[include nitehawk-sb.cfg]

#####################################################################
#   Input Shaper
#####################################################################

# Accelerometer included in nitehawk-sb.cfg
# [mcu rpi]
# [adxl345]
# [input_shaper]
# [resonance_tester]

#####################################################################
#   Macros
#####################################################################

[delayed_gcode machine_startup]
initial_duration: 1
gcode:
    M300 P800

[include status-macros.cfg]
[include nozzle_scrub.cfg]

[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script
gcode:
    # Get information about the state of the printer before PRINT_START
    {% set previous_target_bed = printer.heater_bed.target|default(0) %}
    {% set previous_temperature_bed = printer.heater_bed.temperature|default(0) %}

    # This part fetches data from your slicer. Such as bed temp, extruder temp, chamber temp and size of your printer.
    {% set target_bed = params.BED|int %}
    {% set target_extruder = params.EXTRUDER|int %}
    {% set target_chamber = [(params.CHAMBER|default(0)|int), target_bed//2]|max %}

    ##  Uncomment for Beacon Contact (1 of 4 for beacon contact)
    #SET_GCODE_OFFSET Z=0                                 # Set offset to 0

    M300 P400 ; beep

    # Homes the printer and sets absolute positioning
    G28                   # Full home (XYZ)
    G90                   # Absolute position

    BED_MESH_CLEAR       # Clears old saved bed mesh (if any)

    M106 S255                                           # Turns on the PT-fan

    CENTER                                              # Goes to center of the bed
    M190 S{target_bed}                                  # Sets the target temp for the bed

    # Check if the bed temp is higher than 70c - if so then trigger a heatsoak.
    {% if (target_bed + 1) > 70 %}
        PREHEAT_TIMER DURATION=10 CHAMBER={target_chamber}  # Waits 10 min for the bedtemp to stabilize

    # If the bed temp is not over 70c, then skip the heatsoak and just heat up to set temp with a 5 min soak
    {% else %}
        PREHEAT_TIMER DURATION=5                            # Waits 5 min for the bedtemp to stabilize

    {% endif %}

    M190 S{target_bed}                                      # Resets the target temp for the bed

    # Heats to the nozzle to print temp to perform purge and scrub
    M109 S{target_extruder}                                 # Heats the nozzle to printing temp
    CLEAN_NOZZLE                                            # Purge & scrub nozzle

    # Heating nozzle to 150 degrees. This helps with getting a correct Z-home
    M109 S150                                               # Heats the nozzle to 150c

    ## Uncomment for Beacon contact (2 of 4 for beacon contact)
    #G28 Z METHOD=CONTACT CALIBRATE=1                     # Calibrate z offset and beacon model

    G28 Z                                                   # Re-home Z to account for thermal expansion

    Z_TILT_ADJUST                                           # Levels the buildplate via z_tilt_adjust

    BED_MESH_CALIBRATE ADAPTIVE=1                           # Starts bed mesh

    ## Uncomment for Beacon Contact (3 of 4 for beacon contact)
    #G28 Z METHOD=CONTACT CALIBRATE=0                     # Calibrate z offset only with hot nozzle

    # Heats up the nozzle up to target via data from slicer
    SMART_PARK
    M107                                                    # Turns off partcooling fan
    M109 S{target_extruder}                                 # Heats the nozzle to printing temp

    ## Uncomment for Beacon Contact (4 of 4 for beacon contact)
    #SET_GCODE_OFFSET Z=0.06                              # Add a little offset for hotend thermal expansion

    LINE_PURGE                                              # Purge nozzle
    # VORON_PURGE

    SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=1

    STATUS_PRINTING

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z - 2]|min %}
    {% set z_park = [th.position.z + (th.axis_maximum.z//2), th.axis_maximum.z - 2]|min %}

    M220 S100

    SAVE_GCODE_STATE NAME=STATE_PRINT_END

    M400                           ; wait for buffer to clear
    STATUS_BUSY
    G92 E0                         ; zero the extruder
    _CLIENT_RETRACT LENGTH=4.0     ; retract filament

    TURN_OFF_HEATERS

    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan

    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END

    M400                           ; wait for moves to finish

    SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=0

    G0 Z{z_park} F20000                      ; park high above the bed

    UPDATE_DELAYED_GCODE ID=notify_bed_cooled DURATION=10
    UPDATE_DELAYED_GCODE ID=delayed_save_config DURATION=60
    UPDATE_DELAYED_GCODE ID=delayed_shutdown DURATION=90

[gcode_macro HEAT_CYCLE_BED]
# Deprecated 2024-12-05
gcode:
    {% set CHAMBER_TEMP = printer["temperature_sensor chamber"].temperature %}
    {% set COOL_TEMP = 40 if CHAMBER_TEMP < 40 else 45 %}
    M117 Heat Cycling Bed...
    M190 S90
    TURN_OFF_HEATERS
    M117 Cooling to {COOL_TEMP}~degrees~...
    TEMPERATURE_WAIT SENSOR="heater_bed" MAXIMUM={COOL_TEMP}
    M190 S90

[gcode_macro LOAD_FILAMENT] # Expected by mainsail & KlipperScreen
description: Loads new filament into toolhead
variable_load_distance:  60
variable_purge_distance:  100
gcode:
    M300 P200
    {% set extruder_temp = params.TEMP|default([230, printer.extruder.target]|max)|int %}
    {% set speed = params.SPEED|default(300)|int %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity|int * 60 %}
    {% set motion_sensor_enabled = printer["filament_motion_sensor encoder_sensor"].enabled %}
    # M117 DEBUG: {max_velocity/60} = max_extrude_only_velocity
    SAVE_GCODE_STATE NAME=load_state
    SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=0
    {% if params.PARK|default(1)|int %}
        _TOOLHEAD_PARK_LOAD_UNLOAD TEMP={extruder_temp}
    {% endif %}
    M109 S{extruder_temp}          ; set extruder temperature and wait until it reaches loading temperature
    M400                           ; wait for buffer to clear
    STATUS_BUSY
    M117 Loading Filament...
    M83                            ; set extruder to relative
    G92 E0
    G1 E{load_distance} F{max_velocity} # fast-load
    G1 E{purge_distance} F{speed} # purge
    G92 E0
    M400                           ; wait for moves to finish
    RESET_STATUS
    M117 Load Complete!
    UPDATE_DELAYED_GCODE ID=clear_display DURATION=10
    {% if motion_sensor_enabled %}
        SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=1
    {% endif %}
    M300 P400 # long beep
    RESTORE_GCODE_STATE NAME=load_state MOVE={1 if (printer.pause_resume.is_paused or printer.virtual_sdcard.is_active) else 0}
    # M117 DEBUG: {max_velocity/60} = max_extrude_only_velocity

[gcode_macro UNLOAD_FILAMENT] # Expected by mainsail & KlipperScreen
description: Unloads filament from toolhead
variable_unload_distance:  60 # Do not exceed 70mm, otherwise the warm filament will clog the extruder wheel
variable_purge_distance:  10
gcode:
    M300 P200
    {% set extruder_temp = params.TEMP|default([230, printer.extruder.target]|max)|int %}
    {% set unload_temp = printer.configfile.settings['extruder'].min_extrude_temp|int + 5 %}
    {% set speed = params.SPEED|default(300)|int %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity|int * 60 %}
    {% set motion_sensor_enabled = printer["filament_motion_sensor encoder_sensor"].enabled %}
    # M117 DEBUG: {max_velocity/60} = max_extrude_only_velocity
    SAVE_GCODE_STATE NAME=unload_state
    SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=0
    {% if params.PARK|default(1)|int %}
        _TOOLHEAD_PARK_LOAD_UNLOAD TEMP={extruder_temp}
    {% endif %}
    M109 S{extruder_temp}          ; set extruder temperature and wait until it reaches loading temperature
    M400                           ; wait for buffer to clear
    STATUS_BUSY
    M117 Unloading Filament...
    M83                            ; set extruder to relative
    G92 E0
    M104 S{unload_temp}
    G1 E{purge_distance} F{speed} # purge
    M106 S255
    G1 E-{unload_distance} F{max_velocity} # quickly retract to elimate stringing
    G92 E0
    M104 S{extruder_temp}
    M400                           ; wait for moves to finish
    RESET_STATUS
    M117 Unload Complete!
    UPDATE_DELAYED_GCODE ID=clear_display DURATION=10
    {% if motion_sensor_enabled %}
        SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=1
    {% endif %}
    M300 P400 # long beep
    RESTORE_GCODE_STATE NAME=unload_state MOVE={1 if (printer.pause_resume.is_paused or printer.virtual_sdcard.is_active) else 0}
    # M117 DEBUG: {max_velocity/60} = max_extrude_only_velocity

[gcode_macro PURGE_FILAMENT] # Expected by mainsail
description: Purge filament in a safe location
variable_purge_distance:  100
gcode:
    M300 P200
    {% set min_temp = printer.configfile.settings['extruder'].min_extrude_temp|int + 5 %}
    {% set extruder_temp = params.TEMP|default([min_temp, printer.extruder.target]|max)|int %}
    {% set speed = params.SPEED|default(300)|int %}
    {% set motion_sensor_enabled = printer["filament_motion_sensor encoder_sensor"].enabled %}
    SAVE_GCODE_STATE NAME=load_state
    SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=0
    {% if params.PARK|default(1)|int %}
        _TOOLHEAD_PARK_PURGE TEMP={extruder_temp}
    {% endif %}
    M109 S{extruder_temp}          ; set extruder temperature and wait until it reaches loading temperature
    M400                           ; wait for buffer to clear
    STATUS_BUSY
    M117 Purging Filament...
    M83                            ; set extruder to relative
    G92 E0
    G1 E{purge_distance} F{speed} # purge
    G92 E0
    M400                           ; wait for moves to finish
    RESET_STATUS
    M117 Purge Complete!
    UPDATE_DELAYED_GCODE ID=clear_display DURATION=10
    {% if motion_sensor_enabled %}
        SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=1
    {% endif %}
    M300 P400 # long beep
    RESTORE_GCODE_STATE NAME=load_state MOVE={1 if (printer.pause_resume.is_paused or printer.virtual_sdcard.is_active) else 0}

# [gcode_macro M600]
# description: Filament change
# gcode:
#     {% set x_center = printer.toolhead.axis_maximum.x|float / 2.0 %}
#     {% set y_front = printer.toolhead.axis_minimum.y|float + 10 %}
#     PAUSE X={x_center} Y={y_front} Z_MIN=50
#     # Z_MIN will park the toolhead at a minimum of 50 mm above to bed to make it easier for you to swap filament.

[gcode_macro _DEEP_CLEAN_NOZZLE]
description: Scrubs the nozzle repeatedly while gradually stepping down the nozzle temperature
variable_temp_step: 20 #10
variable_min_temp_step: 10 #5
gcode:
    {% set extruder_temp = params.TEMP|default([230, printer.extruder.target]|max)|int %}
    {% set loop_target = extruder_temp - min_temp_step %}
    {% set loop_start_temp = loop_target - (loop_target % temp_step) %}
    {% for clean_temp in range(loop_start_temp, 160, -temp_step) %} #199
        M109 S{clean_temp}
        CLEAN_NOZZLE                                    # Scrub nozzle
        G28 Z
    {% endfor %}

[gcode_macro _TOOLHEAD_PARK_LOAD_UNLOAD]
gcode:
    {% if not (printer.pause_resume.is_paused or printer.virtual_sdcard.is_active) %}
        {% set extruder_temp = params.TEMP|default([230, printer.extruder.target]|max)|int %}
        _TOOLHEAD_PARK_Z TEMP={extruder_temp}
        FRONT SPEED=18000              ; move the toolhead to the front
    {% endif %}

[gcode_macro _TOOLHEAD_PARK_PURGE]
gcode:
    {% if not (printer.pause_resume.is_paused or printer.virtual_sdcard.is_active) %}
        {% set min_temp = printer.configfile.settings['extruder'].min_extrude_temp|int + 5 %}
        {% set extruder_temp = params.TEMP|default([min_temp, printer.extruder.target]|max)|int %}
        {% set y_rear = printer.toolhead.axis_maximum.y|float - 2 %}
        _TOOLHEAD_PARK_Z TEMP={extruder_temp}
        G1 X10 Y{y_rear} F18000
    {% endif %}

[gcode_macro _TOOLHEAD_PARK_Z]
gcode:
    {% set extruder_temp = params.TEMP|int %}
    CHOME
    M104 S{extruder_temp}
    G90
    G1 Z200 F18000

[gcode_macro CHOME]
description: Homes XYZ axis only if printer is in a non-homed state
gcode:
  {% if "xyz" not in printer.toolhead.homed_axes %}
    M106 S255
    G28
  {% endif %}

[gcode_macro FRONT]
description: Moves the toolhead to the front
gcode:
  CHOME
  {% set x_center = printer.toolhead.axis_maximum.x|float / 2.0 %}
  {% set y_front = printer.toolhead.axis_minimum.y|float + 10 %}
  {% set travel_speed = params.SPEED|default(printer.toolhead.max_velocity|int * 60)|int %}
  G90
  G1 X{x_center} Y{y_front} F{travel_speed}

[gcode_macro CENTER]
description: Moves the toolhead to the center
gcode:
  CHOME
  {% set x_center = printer.toolhead.axis_maximum.x|float / 2.0 %}
  {% set y_center = printer.toolhead.axis_maximum.y|float / 2.0 %}
  {% set travel_speed = params.SPEED|default(printer.toolhead.max_velocity|int * 60)|int %}
  G90
  G1 X{x_center} Y{x_center} F{travel_speed}

[gcode_macro REAR]
description: Moves the toolhead to the rear
gcode:
  CHOME
  {% set x_center = printer.toolhead.axis_maximum.x|float / 2.0 %}
  {% set y_rear = printer.toolhead.axis_maximum.y|float - 2 %}
  {% set travel_speed = params.SPEED|default(printer.toolhead.max_velocity|int * 60)|int %}
  G90
  G1 X{x_center} Y{y_rear} F{travel_speed}

[gcode_macro TOP]
description: Moves the toolhead to the top
gcode:
  CHOME
  {% set z_top = printer.toolhead.axis_maximum.z|float - 20 %}
  {% set travel_speed = params.SPEED|default(printer.toolhead.max_velocity|int * 60)|int %}
  G90
  G1 Z{z_top} F{travel_speed}

[gcode_macro MIDDLE]
description: Moves the toolhead to the middle
gcode:
  CHOME
  {% set z_middle = printer.toolhead.axis_maximum.z|float / 2.0 %}
  {% set travel_speed = params.SPEED|default(printer.toolhead.max_velocity|int * 60)|int %}
  G90
  G1 Z{z_middle} F{travel_speed}

[gcode_macro BOTTOM]
description: Moves the toolhead to the bottom
gcode:
  CHOME
  {% set z_bottom = printer.toolhead.axis_minimum.z|float + 10 %}
  {% set travel_speed = params.SPEED|default(printer.toolhead.max_velocity|int * 60)|int %}
  G90
  G1 Z{z_bottom} F{travel_speed}

[gcode_macro UNSAFE_LOWER_BED]
description: Lower the bed 10mm without homing
gcode:
  G90
  SET_KINEMATIC_POSITION Z=0
  G0 Z10 F600
  M84

[delayed_gcode DISABLE_FILAMENT_SENSOR]
initial_duration: 1
gcode:
    SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=0

[delayed_gcode save_config]
gcode:
    SAVE_CONFIG

#####################################################################
#   Override existing macros with new features
#####################################################################

[include rename_existing.cfg]

#####################################################################
#   Optional G-Code features
#####################################################################

[firmware_retraction]
retract_length: 0.75 # The default is 0 mm.
retract_speed: 30 # The default is 20 mm/s.
#unretract_extra_length: 0
unretract_speed: 12 # The default is 10 mm/s.

[force_move]
enable_force_move: True # Enable FORCE_MOVE and SET_KINEMATIC_POSITION extended G-Code commands

[gcode_arcs] # Enable support for gcode arc (G2/G3) commands

[respond] # Enable the "M118" and "RESPOND" extended commands.

[exclude_object] # Enable exclude_object module in Klipper

#####################################################################
#   Mailsail Customization
#####################################################################

# Client variable macro for your printer.cfg
# See mainsail.cfg for details
[gcode_macro _CLIENT_VARIABLE]
# variable_use_custom_pos   : False ; use custom park coordinates for x,y [True/False]
variable_custom_park_x    : 290.0 ; custom x position; value must be within your defined min and max of X
variable_custom_park_y    : 10.0  ; custom y position; value must be within your defined min and max of Y
# variable_custom_park_dz   : 2.0   ; custom dz value; the value in mm to lift the nozzle when move to park position
# variable_retract          : 1.0   ; the value to retract while PAUSE
# variable_cancel_retract   : 5.0   ; the value to retract while CANCEL_PRINT
# variable_speed_retract    : 35.0  ; retract speed in mm/s
# variable_unretract        : 1.0   ; the value to unretract while RESUME
# variable_speed_unretract  : 35.0  ; unretract speed in mm/s
# variable_speed_hop        : 15.0  ; z move speed in mm/s
# variable_speed_move       : 100.0 ; move speed in mm/s
variable_park_at_cancel   : True  ; allow to move the toolhead to park while execute CANCEL_PRINT [True/False]
# variable_park_at_cancel_x : None  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
# variable_park_at_cancel_y : None  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
# !!! Caution [firmware_retraction] must be defined in the printer.cfg if you set use_fw_retract: True !!!
variable_use_fw_retract   : True  ; use fw_retraction instead of the manual version [True/False]
# variable_idle_timeout     : 0     ; time in sec until idle_timeout kicks in. Value 0 means that no value will be set or restored
variable_runout_sensor    : "filament_switch_sensor switch_sensor" ; If a sensor is defined, it will be used to cancel the execution of RESUME in case no filament is detected.
#                                   Specify the config name of the runout sensor e.g "filament_switch_sensor runout". Hint use the same as in your printer.cfg
# !!! Custom macros, please use with care and review the section of the corresponding macro.
# These macros are for simple operations like setting a status LED. Please make sure your macro does not interfere with the basic macro functions.
# Only  single line commands are supported, please create a macro if you need more than one command.
variable_user_pause_macro : "_AFTER_PAUSE"  ; Everything inside the "" will be executed after the klipper base pause (PAUSE_BASE) function
variable_user_resume_macro: "_BEFORE_RESUME"  ; Everything inside the "" will be executed before the klipper base resume (RESUME_BASE) function
variable_user_cancel_macro: "_USER_CANCEL"  ; Everything inside the "" will be executed before the klipper base cancel (CANCEL_PRINT_BASE) function
gcode:

[gcode_macro _AFTER_PAUSE]
gcode:
    SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=0

[gcode_macro _BEFORE_RESUME]
gcode:
    SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=1
    UPDATE_DELAYED_GCODE ID=clear_display DURATION=1

[gcode_macro _BEFORE_CANCEL]
gcode:
    SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=0

#####################################################################
#   Speed & Acceleration Testing
#####################################################################

[include TEST_SPEED.cfg]
[include SETTLE_BELT_TENSION.cfg]

#####################################################################
#   Machine Shutdown
#####################################################################

[include shutdown.cfg]

#####################################################################
#   Auto Save Config
#####################################################################

[include save_config.cfg]

#####################################################################
#   Klipper Adaptive Meshing & Purging
#####################################################################

[include KAMP_Settings.cfg]
#[include ./KAMP/Adaptive_Meshing.cfg]       # Include to enable adaptive meshing configuration.
[include ./KAMP/Line_Purge.cfg]             # Include to enable adaptive line purging configuration.
#[include ./KAMP/Voron_Purge.cfg]            # Include to enable adaptive Voron logo purging configuration.
[include ./KAMP/Smart_Park.cfg]             # Include to enable the Smart Park function, which parks the printhead near the print area for final heating.

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 58.270
#*# pid_ki = 2.146
#*# pid_kd = 395.509
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 37.144
#*# pid_ki = 4.762
#*# pid_kd = 72.433
#*#
#*# [probe]
#*# z_offset = -0.330
#*#
#*# [input_shaper]
#*# shaper_type_x = 2hump_ei
#*# shaper_freq_x = 76.0
#*# shaper_type_y = 2hump_ei
#*# shaper_freq_y = 41.4
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.090625, 0.098125, 0.091875, 0.060625, 0.044375, 0.042500, 0.055000, 0.074375, 0.086875
#*# 	0.134375, 0.098125, 0.088750, 0.085000, 0.083125, 0.065000, 0.081250, 0.120000, 0.118750
#*# 	0.181250, 0.093750, 0.072500, 0.050000, 0.046250, 0.066875, 0.088125, 0.108125, 0.141250
#*# 	0.135625, 0.078750, 0.078750, 0.058125, 0.036250, 0.037500, 0.050000, 0.076875, 0.088125
#*# 	0.086250, 0.032500, 0.031250, 0.001250, -0.001875, -0.007500, 0.013750, 0.076250, 0.084375
#*# 	0.072500, 0.035000, 0.044375, 0.033125, 0.011250, 0.023125, 0.021875, 0.048750, 0.076875
#*# 	0.062500, 0.055000, 0.030625, 0.000625, -0.010000, -0.006875, 0.018125, 0.086250, 0.097500
#*# 	0.087500, 0.098125, 0.056250, 0.039375, 0.043125, 0.052500, 0.088750, 0.111875, 0.096875
#*# 	0.132500, 0.077500, 0.067500, 0.080625, 0.095625, 0.141875, 0.094375, 0.106250, 0.139375
#*# x_count = 9
#*# y_count = 9
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 30.0
#*# max_x = 270.0
#*# min_y = 30.0
#*# max_y = 270.0
