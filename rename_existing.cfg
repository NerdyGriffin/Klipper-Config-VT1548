# TODO: Add file description here

#####################################################################
#   Implement less common G-Code commands
#####################################################################

[gcode_macro M0]
gcode: PAUSE

[gcode_macro M141]
# rename_existing: M141.1
gcode:
    {% set S = params.S %}
    # STATUS_HEATING
    SET_DISPLAY_TEXT MSG="Requested Chamber: {S}C"
    # PREHEAT_TIMER CHAMBER={S} DURATION=0
    # M141.1 {rawparams}

    {% if printer.idle_timeout.state|upper == "PRINTING" %}
        STATUS_PRINTING
    {% else %}
        UPDATE_DELAYED_GCODE ID=clear_display DURATION=120
    {% endif %}

[gcode_macro M205]
gcode:
  {% if 'X' in params %}
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={10 * params.X|float // (2 ** 0.5) / 10}
  {% elif 'Y' in params %}
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={10 * params.Y|float // (2 ** 0.5) / 10}
  {% endif %}

[gcode_macro M226]
gcode: PAUSE

# [gcode_macro T0]
# gcode: 
#     M300 P100 ; beep    
#     G4 P100
#     M300 P100
#     G4 P100
#     M300 P100
#     G4 P100

#####################################################################
#   Override existing commands to automatically update status
#####################################################################

[gcode_macro M109]
rename_existing: M109.1
gcode:
    {% set S = params.S %}
    STATUS_HEATING
    SET_DISPLAY_TEXT MSG="Heating Extruder: {S}C"
    M109.1 {rawparams}
    RESET_STATUS

[gcode_macro M190]
rename_existing: M190.1
gcode:
    {% set S = params.S %}
    STATUS_HEATING
    SET_DISPLAY_TEXT MSG="Heating Bed: {S}C"
    M190.1 {rawparams}
    RESET_STATUS

[gcode_macro SET_HEATER_TEMPERATURE]
rename_existing: _SET_HEATER_TEMPERATURE
gcode:
    {% set HEATER = params.HEATER %}
    {% set TARGET = params.TARGET %}

    STATUS_HEATING

    {% if 'extruder' in HEATER %}
        SET_DISPLAY_TEXT MSG="Heating Extruder: {TARGET}C"
    {% elif 'heater_bed' in HEATER %}
        SET_DISPLAY_TEXT MSG="Heating Bed: {TARGET}C"
    {% else %}
        SET_DISPLAY_TEXT MSG="{HEATER}: {TARGET}C"
    {% endif %}
    
    _SET_HEATER_TEMPERATURE {rawparams}

    {% if printer.idle_timeout.state|upper == "PRINTING" %}
        STATUS_PRINTING
    {% else %}
        UPDATE_DELAYED_GCODE ID=clear_display DURATION=120
    {% endif %}

[gcode_macro TURN_OFF_HEATERS]
rename_existing: _TURN_OFF_HEATERS
gcode:
    _TURN_OFF_HEATERS {rawparams}
    STATUS_READY
    
    # The following UPDATE_DELAYED_GCODE causes infinite loop 
    # because the execution of notify_bed_cooled brings the printer out of the idle state, 
    # and then the idle_timeout triggers TURN_OFF_HEATERS when the printer returns to idle,
    # which then call the delayed_gcode below, thus restarting the cycle
    # UPDATE_DELAYED_GCODE ID=notify_bed_cooled DURATION=10

######################################################################
# Override M117 command with rawparams
######################################################################

# The macro below will override the default M117 command to echo the message.
#
# It uses the rawparams pseudo-variable that contains the full unparsed
# parameters that was passed to the M117 command.
#
# As this can include comments, we are trimming the text when a `;` or `#` is
# found, and escaping any existing `"`

[gcode_macro M117]
rename_existing: M117.1
gcode:
  {% if rawparams %}
    {% set escaped_msg = rawparams.split(';', 1)[0].split('\x23', 1)[0]|replace('"', '\\"') %}
    SET_DISPLAY_TEXT MSG="{escaped_msg}"
    RESPOND TYPE=command MSG="{escaped_msg}"
  {% else %}
    SET_DISPLAY_TEXT
  {% endif %}
