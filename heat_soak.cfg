# Dependencies: Klipper led-effects plugin and LED/LCD status-macros

[gcode_macro M141]
description: Emulate chamber heater using temperature_fan
gcode:
    {% set S = params.S|default(0)|float %}
    # SET_TEMPERATURE_FAN_TARGET temperature_fan="chamber" target={S}
    SET_DISPLAY_TEXT MSG="Requested Chamber: {S}C"

[gcode_macro M191]
description: Emulate chamber heater using HEAT_SOAK macro
gcode:
    {% set S = params.S|default(0)|float %}
    M141 {rawparams}
    {% if S|float == 0 %}
        # Do nothing
    {% else %}
        HEAT_SOAK CHAMBER={S} DURATION=0
    {% endif %}

[gcode_macro HEAT_SOAK]
variable_max_chamber_temp: 60
variable_led_count: 10
gcode:
    {% set target_bed = params.BED|default(printer.heater_bed.target)|int %}
    {% set target_extruder = params.EXTRUDER|default(printer.extruder.target)|int %}
    {% set target_chamber = [([(params.CHAMBER|default(20)|int), target_bed//2]|max), max_chamber_temp]|min %}
    {% set ext_assist_temp = [target_chamber * 4, 200]|min %}
    {% set bed_assist_temp = [target_chamber * 4, (printer.configfile.settings.heater_bed.max_temp - 10)]|min %}

    {% if printer["temperature_sensor chamber"].temperature < target_chamber %}
        M106 S255
        M104 S{ext_assist_temp}
        {% if target_chamber > 40 %}
            M140 S{bed_assist_temp}
        {% endif %}
    {% endif %}

    BOTTOM

    M400 ; wait for buffer to clear
    UPDATE_DELAYED_GCODE ID=clear_display DURATION=0
    SET_DISPLAY_TEXT MSG="Preheating..."
    STOP_LED_EFFECTS FADETIME=1.0
    G4 P1000
    SET_LED_EFFECT EFFECT=preheat_logo REPLACE=1 FADETIME=1.0

    {% if printer["temperature_sensor chamber"].temperature < target_chamber %}
        SET_DISPLAY_TEXT MSG="Heatsoak: {target_chamber}C"  # Displays info
        TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={target_chamber}   # Waits for chamber to reach desired temp
        G4 P1000
    {% endif %}

    # Get DURATION in minutes and convert to milliseconds
    {% set DURATION_MS = ( params.DURATION|default(15)|float * 60000 )|int %}
    # Calculate the number of times to refresh the LEDs
    {% set frame_rate = params.FRAME_RATE|default(24)|int %}
    {% set refresh_delay = 1000 / frame_rate %}
    {% set REFRESH_COUNT = ( DURATION_MS / refresh_delay )|int %}
    # For each refresh of the LEDs:
    {% for refresh_index in range(0, REFRESH_COUNT) %}
        # Calculate the total milliseconds until the preheat timer is complete
        {% set MILLISECONDS_REMAINING = refresh_delay * ( REFRESH_COUNT - refresh_index ) %}
        # Convert the total time remaining into minutes and seconds
        {% set MINUTES_REMAINING = ( MILLISECONDS_REMAINING / 60000 ) %}
        {% set SECONDS_REMAINING = ( MILLISECONDS_REMAINING / 1000 ) %}
        # Format the minutes and seconds for a clock-style display
        {% set MINUTES_FORMATED = MINUTES_REMAINING|int %}
        {% set SECONDS_FORMATED = ( SECONDS_REMAINING - ( 60 * ( SECONDS_REMAINING / 60 )|int ) )|int %}
        # Display the current time remaining
        SET_DISPLAY_TEXT MSG="Heatsoak: {"%02d:%02d"|format(MINUTES_FORMATED, SECONDS_FORMATED)}"

        G4 P{refresh_delay}
    {% endfor %}

    M104 S{target_extruder} # Resets the target temp for the extruder
    M190 S{target_bed}      # Resets the target temp for the bed

    RESET_STATUS
